'use client';
import Link from "next/link";
import { usePathname } from "next/navigation";
import React, { useEffect } from "react";
import { useMapStore } from "../store/useMapStore";

export default function Menu() {
    const pathname = usePathname(); // Obter a rota atual

    // Verifica se a rota atual é '/info'
    const isInfoActive = pathname === "/";
    const isSliderActive = pathname === "/extras";
    


    const { currentId, isActiveId, setCurrentId, setIsActiveId } = useMapStore();



    return (
        <nav className={`${isInfoActive || isSliderActive ? '' : 'hidden'} absolute bottom-0 bg-[#349C8F] p-5 py-5 rounded-t-xl flex gap-5 z-[999]`}>
            {/* Ícone com cor alterada quando a rota for '/info' */}
            <Link href="/" onClick={() => setCurrentId('0', false)}>
                {/* <div className={`${currentId == "map" ? "" : "hidden"} absolute top-[-74px] left-1/2 transform -translate-x-1/2 rotate-180`}>
                    <svg xmlns="http://www.w3.org/2000/svg" width="34" height="54" viewBox="0 0 24 24">
                        <path
                            className="animate-bounce"
                            fill="#349C8F" d="M19.221 10.803L12 10V4a2 2 0 0 0-4 0v12l-3.031-1.212a2 2 0 0 0-2.64 1.225l-.113.34a1 1 0 0 0 .309 1.084l5.197 4.332c.179.149.406.231.64.231H19a2 2 0 0 0 2-2v-7.21a2 2 0 0 0-1.779-1.987" />
                    </svg>
                </div> */}
                <svg xmlns="http://www.w3.org/2000/svg" width="63" height="54" viewBox="0 0 24 24">
                    <path
                        d="M6.271 2.112c-.81.106-1.238.301-1.544.6c-.305.3-.504.72-.613 1.513C4.002 5.042 4 6.124 4 7.675v8.57a4.2 4.2 0 0 1 1.299-.593c.528-.139 1.144-.139 2.047-.138H20V7.676c0-1.552-.002-2.634-.114-3.451c-.109-.793-.308-1.213-.613-1.513c-.306-.299-.734-.494-1.544-.6c-.834-.11-1.938-.112-3.522-.112H9.793c-1.584 0-2.688.002-3.522.112m.488 4.483c0-.448.37-.811.827-.811h8.828a.82.82 0 0 1 .827.81a.82.82 0 0 1-.827.811H7.586a.82.82 0 0 1-.827-.81m.827 2.973a.82.82 0 0 0-.827.81c0 .448.37.811.827.811h5.517a.82.82 0 0 0 .828-.81a.82.82 0 0 0-.828-.811z"
                        fill={isInfoActive ? "#F9D8A7" : "#fff"}
                        fillRule="evenodd"
                        clipRule="evenodd" />
                    <path
                        d="M7.473 17.135H20c-.003 1.13-.021 1.974-.113 2.64c-.109.793-.308 1.213-.613 1.513c-.306.299-.734.494-1.544.6c-.834.11-1.938.112-3.522.112H9.793c-1.584 0-2.688-.002-3.522-.111c-.81-.107-1.238-.302-1.544-.601c-.305-.3-.504-.72-.613-1.513c-.041-.3-.068-.637-.084-1.02a2.46 2.46 0 0 1 1.697-1.537c.29-.076.667-.083 1.746-.083"
                        fill={isInfoActive ? "#F9D8A7" : "#fff"}
                    />
                </svg>
            </Link>

            <Link href="/extras" className="relative" onClick={() => setCurrentId('0', false)}>
                {/* <div className={`${currentId == "1" ? "" : "hidden"} absolute top-[-74px] left-1/2 transform -translate-x-1/2 rotate-180`}>
                    <svg xmlns="http://www.w3.org/2000/svg" width="34" height="54" viewBox="0 0 24 24">
                        <path
                            className="animate-bounce"
                            fill="#349C8F" d="M19.221 10.803L12 10V4a2 2 0 0 0-4 0v12l-3.031-1.212a2 2 0 0 0-2.64 1.225l-.113.34a1 1 0 0 0 .309 1.084l5.197 4.332c.179.149.406.231.64.231H19a2 2 0 0 0 2-2v-7.21a2 2 0 0 0-1.779-1.987" />
                    </svg>
                </div> */}
                <svg width="54" height="54" viewBox="0 0 54 54" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M14.8499 37.8C15.9241 37.8 16.9542 37.3733 17.7137 36.6138C18.4732 35.8543 18.8999 34.8241 18.8999 33.75C18.9101 33.6152 18.9101 33.4798 18.8999 33.345L26.4329 25.812H27.6749L32.0219 30.159V30.375C32.0219 31.4491 32.4486 32.4793 33.2082 33.2388C33.9677 33.9983 34.9978 34.425 36.0719 34.425C37.1461 34.425 38.1762 33.9983 38.9357 33.2388C39.6952 32.4793 40.1219 31.4491 40.1219 30.375V30.159L49.9499 20.25C50.751 20.25 51.534 20.0125 52.2 19.5675C52.866 19.1224 53.3851 18.4899 53.6917 17.7499C53.9982 17.0098 54.0784 16.1955 53.9221 15.4099C53.7659 14.6243 53.3801 13.9026 52.8137 13.3362C52.2473 12.7698 51.5257 12.3841 50.7401 12.2278C49.9544 12.0715 49.1401 12.1518 48.4001 12.4583C47.66 12.7648 47.0275 13.2839 46.5825 13.9499C46.1375 14.616 45.8999 15.399 45.8999 16.2C45.8898 16.3348 45.8898 16.4702 45.8999 16.605L36.1529 26.352H35.7209L31.0499 21.6C31.0499 20.5259 30.6232 19.4957 29.8637 18.7362C29.1042 17.9767 28.0741 17.55 26.9999 17.55C25.9258 17.55 24.8957 17.9767 24.1362 18.7362C23.3766 19.4957 22.9499 20.5259 22.9499 21.6L14.8499 29.7C13.7758 29.7 12.7457 30.1267 11.9862 30.8862C11.2266 31.6457 10.7999 32.6759 10.7999 33.75C10.7999 34.8241 11.2266 35.8543 11.9862 36.6138C12.7457 37.3733 13.7758 37.8 14.8499 37.8ZM51.2999 48.6H5.39994V2.7C5.39994 1.98392 5.11548 1.29716 4.60913 0.790812C4.10278 0.284463 3.41602 0 2.69994 0C1.98385 0 1.2971 0.284463 0.790751 0.790812C0.284402 1.29716 -6.10352e-05 1.98392 -6.10352e-05 2.7V51.3C-6.10352e-05 52.0161 0.284402 52.7028 0.790751 53.2092C1.2971 53.7155 1.98385 54 2.69994 54H51.2999C52.016 54 52.7028 53.7155 53.2091 53.2092C53.7155 52.7028 53.9999 52.0161 53.9999 51.3C53.9999 50.5839 53.7155 49.8972 53.2091 49.3908C52.7028 48.8845 52.016 48.6 51.2999 48.6Z"
                        fill="white" />
                </svg>

            </Link>



        </nav>
    );
}
